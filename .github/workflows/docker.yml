name: docker hub

on:
  push:
    branches:
      - main
    paths:
      - '*.Dockerfile'
      - '.github/workflows/docker.yml'
      - 'docker_hub/*.md'

jobs:
  changes:
    runs-on: ubuntu-latest
    name: git changes
    outputs:
      workflow_cfg: ${{ steps.filter.outputs.workflow_cfg }}
      ff_solana_builder: ${{ steps.filter.outputs.ff_solana_builder }}
      ff_solana_builder_docs: ${{ steps.filter.outputs.ff_solana_builder_docs }}
      ff_anchor: ${{ steps.filter.outputs.ff_anchor }}
      ff_anchor_docs: ${{ steps.filter.outputs.ff_anchor_docs }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            workflow_cfg:
              - '.github/workflows/docker.yml'
            ff_solana_builder:
              - 'docker.solana.ci.Dockerfile'
            ff_solana_builder_docs:
              - 'docker_hub/ff_solana_builder.md'
            ff_anchor:
              - 'docker.anchor.ci.Dockerfile'
            ff_anchor_docs:
              - 'docker_hub/ff_anchor.md'

  ff_solana_builder:
    runs-on: ubuntu-latest
    name: ff_solana_builder (amd64)
    env:
      AGAVE_VERSION: 2.1.9
    needs: [changes]
    if: needs.changes.outputs.workflow_cfg == 'true' || needs.changes.outputs.ff_solana_builder == 'true'
    steps:
      - name: login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: pjlangley
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: get short sha
        id: short_sha
        run: echo "sha=${GITHUB_SHA:0:7}" >> "$GITHUB_OUTPUT"

      - name: build image 
        uses: docker/build-push-action@v6
        with:
          file: docker.solana.ci.Dockerfile
          target: builder
          platforms: linux/amd64
          pull: true
          push: false
          load: true

      - name: get image id
        id: image_id
        run: echo "id=$(docker images -q | head -n 1)" >> "$GITHUB_OUTPUT"

      - name: tagging
        run: |
          docker tag ${{ steps.image_id.outputs.id }} pjlangley/ff_solana_builder:${{ env.AGAVE_VERSION }}-amd64-${{ steps.short_sha.outputs.sha }}
          docker push pjlangley/ff_solana_builder:${{ env.AGAVE_VERSION }}-amd64-${{ steps.short_sha.outputs.sha }}

      - name: manifests
        run: |
          docker manifest create pjlangley/ff_solana_builder:${{ env.AGAVE_VERSION }} \
          pjlangley/ff_solana_builder:${{ env.AGAVE_VERSION }}-amd64-${{ steps.short_sha.outputs.sha }}

          docker manifest create pjlangley/ff_solana_builder:latest \
          pjlangley/ff_solana_builder:${{ env.AGAVE_VERSION }}-amd64-${{ steps.short_sha.outputs.sha }}

          docker manifest push pjlangley/ff_solana_builder:${{ env.AGAVE_VERSION }}
          docker manifest push pjlangley/ff_solana_builder:latest
      
  ff_solana_builder_docs:
    runs-on: ubuntu-latest
    name: ff_solana_builder_docs
    needs: [changes, ff_solana_builder]
    if: always() && (needs.changes.outputs.workflow_cfg == 'true' || needs.changes.outputs.ff_solana_builder_docs == 'true')
    steps:
      - uses: actions/checkout@v4
      - name: set description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: pjlangley
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: pjlangley/ff_solana_builder
          short-description: Builder stage image for Solana CLI and Anchor CLI images
          readme-filepath: ./docker_hub/ff_solana_builder.md

  ff_anchor:
    runs-on: ubuntu-latest
    name: ff_anchor (amd64)
    env:
      ANCHOR_VERSION: 0.30.1
    needs: [changes, ff_solana_builder]
    if: needs.changes.outputs.workflow_cfg == 'true' || needs.changes.outputs.ff_anchor == 'true'
    steps:
      - name: login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: pjlangley
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: get short sha
        id: short_sha
        run: echo "sha=${GITHUB_SHA:0:7}" >> "$GITHUB_OUTPUT"

      - name: build image 
        uses: docker/build-push-action@v6
        with:
          file: docker.anchor.ci.Dockerfile
          platforms: linux/amd64
          pull: true
          push: false
          load: true

      - name: get image id
        id: image_id
        run: echo "id=$(docker images -q | head -n 1)" >> "$GITHUB_OUTPUT"

      - name: tagging
        run: |
          docker tag ${{ steps.image_id.outputs.id }} pjlangley/ff_anchor:${{ env.ANCHOR_VERSION }}-amd64-${{ steps.short_sha.outputs.sha }}
          docker push pjlangley/ff_anchor:${{ env.ANCHOR_VERSION }}-amd64-${{ steps.short_sha.outputs.sha }}

      - name: manifests
        run: |
          docker manifest create pjlangley/ff_anchor:${{ env.ANCHOR_VERSION }} \
          pjlangley/ff_anchor:${{ env.ANCHOR_VERSION }}-amd64-${{ steps.short_sha.outputs.sha }}

          docker manifest create pjlangley/ff_anchor:latest \
          pjlangley/ff_anchor:${{ env.ANCHOR_VERSION }}-amd64-${{ steps.short_sha.outputs.sha }}

          docker manifest push pjlangley/ff_anchor:${{ env.ANCHOR_VERSION }}
          docker manifest push pjlangley/ff_anchor:latest

  ff_anchor_docs:
    runs-on: ubuntu-latest
    name: ff_anchor_docs
    needs: [changes, ff_anchor]
    if: always() && (needs.changes.outputs.workflow_cfg == 'true' || needs.changes.outputs.ff_anchor_docs == 'true')
    steps:
      - uses: actions/checkout@v4
      - name: set description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: pjlangley
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: pjlangley/ff_anchor
          short-description: Anchor CLI image for Solana programs
          readme-filepath: ./docker_hub/ff_anchor.md