on: [push]

jobs:
  ff_node:
    runs-on: ubuntu-latest
    name: node.js
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: docker build --force-rm -f docker.node.Dockerfile -t ff_node .
      - name: run all fragments
        run: docker run --rm --network ci-network --env CI=$CI ff_node
      - name: unit tests
        run: docker run --rm --network ci-network --env CI=$CI --entrypoint npm ff_node run test
      - name: lint
        run: docker run --rm --entrypoint npm ff_node run lint
      - name: typescript check
        run: docker run --rm --entrypoint npm ff_node run tsc
      - name: format check
        run: docker run --rm --entrypoint npm ff_node run format:check

  ff_python:
    runs-on: ubuntu-latest
    name: python
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: docker build --force-rm -f docker.python.Dockerfile -t ff_python .
      - name: run all fragments
        run: docker run --rm --network ci-network --env CI=$CI ff_python
      - name: unit tests
        run: docker run --rm --network ci-network --env CI=$CI --entrypoint python3 ff_python -m unittest -v --failfast
      - name: type check
        run: docker run --rm --entrypoint python3 ff_python -m mypy --config-file mypy.ini
      - name: lint
        run: docker run --rm --entrypoint python3 ff_python -m pylint ./fragments --rcfile ./pylintrc
      - name: format check
        run: docker run --rm --entrypoint python3 ff_python -m black ./fragments --check

  ff_rust:
    runs-on: ubuntu-latest
    name: rust
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: docker build --force-rm -f docker.rust.Dockerfile -t ff_rust .
      - name: run all fragments
        run: docker run --rm --network ci-network --env CI=$CI ff_rust
      - name: unit tests
        run: docker run --rm --network ci-network --env CI=$CI --entrypoint cargo ff_rust test --release
      - name: build
        run: docker run --rm --entrypoint cargo ff_rust build --release --bin fragments
      - name: lint
        run: docker run --rm --entrypoint cargo ff_rust clippy -- -D warnings
      - name: format check
        run: docker run --rm --entrypoint cargo ff_rust fmt -v --check

  ff_go:
    runs-on: ubuntu-latest
    name: go
    steps:
      - uses: actions/checkout@v4
      - run: docker build --force-rm -f docker.go.Dockerfile -t ff_go .
      - name: run all fragments
        run: docker run --rm ff_go
      - name: unit tests
        run: docker run --rm --entrypoint go ff_go test ./fragments/...
      - name: build
        run: docker run --rm --entrypoint go ff_go build -o .bin/go_ff ./fragments/main.go
      - name: lint
        run: docker run --rm --entrypoint golangci-lint ff_go run -v ./fragments/...
      - name: format check
        run: docker run --rm --entrypoint test ff_go -z $(gofmt -l ./fragments)